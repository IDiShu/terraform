Документация для предоставленной конфигурации Terraform:
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Provider Configuration
provider "aws" {
  region = var.region
}

В этом разделе задается конфигурация AWS провайдера. Он использует значение из переменной var.region для определения региона AWS.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Data Source: Get Latest Ubuntu AMI
data "aws_ami" "latest_ubuntu" {
  owners      = ["099720109477"]
  most_recent = true

  filter {
    name   = "name"
    values = ["ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"]
  }
}

Этот раздел определяет источник данных, который извлекает информацию о последнем доступном образе Ubuntu в AWS с определенными фильтрами.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Resource: AWS EC2 Instance
resource "aws_instance" "my_server" {
  ami           = data.aws_ami.latest_ubuntu.id
  instance_type = var.instance_type
  vpc_security_groups_ids = [aws_security_group.my_ubuntu.id]
  monitoring = var.enable_detailed_monitoring
  tags = merge(var.common_tags , {Name = "Server Build by Terraform"} , {Region = var.region})
}

В этом разделе определяется ресурс "aws_instance", который представляет Amazon Elastic Compute Cloud (EC2) instance. Он использует образ Ubuntu, указанный в источнике данных, и настраивается с использованием различных переменных, таких как var.instance_type, var.enable_detailed_monitoring и var.common_tags.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Resource: Elastic IP
resource "aws_eip" "my_static_ip" {
  instance = aws_instance.my_server.id
  tags = merge(var.common_tags , {Name ="${var.common_tags["Environment"]} Server IP" })
}

Этот раздел определяет ресурс "aws_eip", который представляет собой Elastic IP (статический IP-адрес) и привязывает его к созданному EC2 instance.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Security Group Rules
dynamic "ingress" {
  for_each = var.allow_ports
  content {
    description      = "protocol default"
    from_port        = ingress.value
    to_port          = ingress.value
    protocol         = "tcp"
    cidr_blocks      = var.cidr_blocks_ip
  }
}

egress {
  from_port        = 0
  to_port          = 0
  protocol         = "-1"
  cidr_blocks      = ["0.0.0.0/0"]
  ipv6_cidr_blocks = ["::/0"]
}

В этой части определяются правила входящего и исходящего сетевого трафика для группы безопасности EC2 instance. Правила для входящего трафика динамически создаются на основе переменной var.allow_ports, а правила исходящего трафика разрешают всю активность.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Tags for Security Group
tags = merge(var.common_tags , {Name = "Server SecurityGroup"} , {Region = var.region})

Этот раздел устанавливает теги для группы безопасности, включая имя и регион. Теги определяются с использованием переменных, таких как var.common_tags и var.region.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Эта конфигурация Terraform создает и настраивает EC2 instance, а также связанный с ним статический IP-адрес и группу безопасности в AWS. Переменные, определенные в конфигурации, используются для настройки ресурсов, что делает ее более гибкой и параметризированной.